{"version":3,"sources":["pages/Home.js","pages/Test.js","components/image.js","components/Review.js","pages/Item.js","components/item.js","pages/ListItems.js","components/router/Dress.js","pages/Login.js","components/router/NavButton.js","components/router/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","Main","styled","div","props","state","api","postlogin","bind","event","preventDefault","axios","post","name","this","value","email","then","response","console","log","catch","error","onSubmit","ref","type","placeholder","required","Component","image","src","Image","img","Review","reviews","pagen","pager","moveP","get","res","setState","data","e","length","n","sN","bN","Pagination","onClick","map","page","id","Element","review","body","span","Item","num","useParams","Items","photo","item","Container","StyledLink","to","Title","title","price","p","Link","ListItems","items","key","Dress","path","useRouteMatch","exact","children","Login","user","handleLogin","password","NavButton","firstCharacter","link","slice","restCharacters","ButtonName","toUpperCase","StyledButton","StyledHeading","button","arr","Nav","Navigation","ButtonGroup","Ul","Test","nav","ul","App","Background","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f2048726.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nexport default function Home() {\n    return (\n        <Main>\n            Hello, this is home!\n        </Main>\n    )\n}\n\nconst Main = styled.div`\nposition: relative;\ntop: 100px;\nmargin: 0 auto;\nbackground-color: hsla(0, 100%, 0%, 0.5);\nwidth: 100%;\n`","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst myurl = \"http://localhost:3001/customers\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           api : []\n       }\n       this.postlogin = this.postlogin.bind(this);\n}\n\n    postlogin(event) {\n        event.preventDefault();\n        axios.post(myurl, {\n            name: this.name.value,\n            email: this.email.value\n          })\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n    render() {        \n        return (\n            <div>\n                <form onSubmit={this.postlogin}>\n                <input ref={ref => {this.name = ref }} type=\"text\" name=\"name\" placeholder=\"Username\" required />                \n                <input ref={ref => {this.email = ref}} type=\"text\" name=\"email\" placeholder=\"Email\" required />                \n                <input type=\"submit\"/>\n                </form>                \n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react'\nimport styled from 'styled-components'\n\nexport default function image({ src }) {\n    return (\n        <Image src={src}/>\n    );\n}\n\nconst Image = styled.img`\n    height : 100%;        \n    margin : 0 auto;\n`","import React, { Component } from 'react';\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nclass Review extends Component {    \n    constructor() {\n        super();\n        this.pager = this.pager.bind(this);\n        this.moveP = this.moveP.bind(this);\n    }\n    state = {\n        reviews: [],\n        pagen: 1\n    }\n\n    componentDidMount() {\n        const address = \"https://jsonplaceholder.typicode.com/comments\"\n        axios.get(address)\n            .then(res => {\n                this.setState({\n                    reviews : res.data\n                })\n            })            \n    }\n\n    pager(e) {\n        this.setState({pagen : e/10});\n    }\n\n    moveP(e) {\n        if (e === \"<\" && this.state.pagen >= 1) \n        { this.setState({\n            pagen : this.state.pagen - 1\n        }) } else if (e === \"<\" && this.state.pagen <= this.state.reviews.length - 1) {\n        this.setState({\n            pagen : this.state.pagen + 1\n        }) \n    }\n    }\n\n    render() {\n        const n = this.state.pagen        \n        const sN = (n - 1) * 10 + 1;\n        const bN = (n) * 10\n        return (\n            <div>\n                <Pagination>\n                <center>\n                <span onClick={() => this.moveP(\"<\")}>{\"<\"}</span>\n                {this.state.reviews.map(page => n <= 5 && \n                page.id%10 === 0 &&\n                page.id/10 >= 1 &&\n                page.id/10 <= 10 ?\n                <Element onClick={() => this.pager(page.id)}> {page.id/10} </Element> :                  \n                page.id%10 === 0 && \n                page.id/10 >= n - 5 &&\n                page.id/10 <= n + 5 ?\n                <Element onClick={() => this.pager(page.id)}> {page.id/10} </Element> : \"\")}\n                <span onClick={() => this.moveP(\">\")}>{\">\"}</span>\n                </center>\n                </Pagination>\n                {this.state.reviews.map(review => <p>{review.id >= sN  && review.id <= bN ? review.body : \"\"}</p>)}\n            </div>               \n        )}\n}\n\nexport default Review;\n\nconst Pagination = styled.div`\n\n`\nconst Element = styled.span`\nbox-sizing: border-box;\ndisplay: inline-block;\nwidth: 30px;\n`","import React from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport Image from '../components/image'\nimport Review from '../components/Review'\nimport Items from '../api/items.json'\n\nexport default function Item() {    \n    let id = useParams();        \n    let num = id.id - 1;\n    return (            \n        <div>            \n            <Image src={Items[num].photo} />           \n            <br />\n            <Review />\n        </div>\n    );\n}","import React, { Component } from 'react';\n\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport Image from './image'\n\nclass item extends Component {\n    render() {\n        return (\n            <Container >                \n                <StyledLink to={this.props.to}>\n                    <Image src={this.props.src} />\n                    <br />\n                    <Title>{this.props.title}</Title>\n                    <br />\n                    <Title>{this.props.price} EUR</Title>               \n                </StyledLink>\n            </Container>\n        );\n    }\n}\n\nexport default item;\n\nconst Container = styled.div`\n    height : 200px;\n    width : 150px;\n    text-decoration : none;\n    & : visited {\n        color : black;\n    };\n    & : link {\n        color : black;\n    };\n    & : hover {\n        color : red;\n    };\n`\nconst Title = styled.p`\n    margin : 0;\n`\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n`","import React from 'react';\nimport ItemList from '../components/item'\nimport items from '../api/items.json'\n\nexport default function ListItems() {\n    return (\n        items.map(item => \n        <ItemList key={item.id} to={\"/dress/showitem/\" + item.id} src={item.photo} title={item.title} price=\"300\" />\n        )\n    )\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch, BrowserRouter as Router} from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport ItemPage from '../../pages/Item'\nimport Lists from '../../pages/ListItems'\n\nexport default function Dress() {    \n    let { path } = useRouteMatch();\n    return (\n        <Main>\n        <Router>                              \n            <Switch >\n                <Route exact path={path} children={<Lists />} />\n                <Route path={`${path}/showitem/:id`} children={<ItemPage />} />\n            </Switch>\n        </Router>\n        </Main>\n    );\n}\n\nconst Main = styled.div`\n    margin-top: 7rem;\n`","import React, { Component } from 'react';\nimport axios from 'axios'\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n    state = {\n        user: \"\"\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n        axios.post('http://localhost:3001/auth', {\n            name: this.name.value,\n            password: this.password.value\n        })            \n            .then(res => this.setState({ user: res.data  }))\n    }\n\n    render() {                \n         return (\n            <div>\n            {this.state.user === \"\" ? \n                <form onClick={this.handleLogin}>\n                    <input type=\"text\" ref={ref=> { this.name = ref}} name=\"name\" />\n                    <input type=\"password\" ref={ref => {this.password = ref}} name=\"password\" />\n                    <input type=\"submit\" />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />                \n                    {this.state.user.name}\n                </form> : \n                <div>\n                    Hello, {this.state.user.name}\n                </div>}         \n            </div> \n         );                \n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nclass NavButton extends Component {\n    render() {\n        //Get props to SideBar component for Route Link.\n        //If link is empty then link will get / for Home\n        let path = () => this.props.link === \"\"? \"/\" : \"/\" + this.props.link;\n        //To put names same to link\n        let firstCharacter = this.props.link.slice(0, 1);\n        let restCharacters = this.props.link.slice(1);\n        let ButtonName = firstCharacter.toUpperCase() + restCharacters;\n        return (\n            <StyledButton>\n              {/*This Link will get link from arr array which get mapping */}\n              <StyledLink to={path()}>\n                {/*This is header of link. Default is Home */}\n                <StyledHeading>                  \n                    {this.props.link === \"\"? \"Home\" : ButtonName}                  \n                </StyledHeading>\n              </StyledLink>        \n            </StyledButton>\n        );\n    }\n}\n\nexport default NavButton;\n\nconst StyledButton = styled.button`\nwidth: 10rem;\nheight: 3rem;\nbackground-color: hsla(0, 100%, 0%, 0.8);\nborder-color: hsla(0, 100%, 0%, 0.8);\n`\nconst StyledLink = styled(Link)`\nfont-size: 25px;\ntext-decoration: none;\n&:visited {\n  color: hsl(0, 100%, 100%);;\n}\n&:hover {\n  color: red;\n}\n`\nconst StyledHeading = styled.p`\nheight: 2.4rem;\nwidth: 9.3rem;\nmargin: 0;\n`","import React, { Component } from 'react';\nimport {\n    Switch,\n    Route\n} from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Home from '../../pages/Home'\nimport Test from '../../pages/Test'\nimport Item from '../../pages/Item'\nimport Dress from './Dress'\nimport Login from '../../pages/Login'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport NavButton from './NavButton'\n\nconst arr = [\"\", \"dress\", \"test\", \"item\", \"login\"];\n\nclass Nav extends Component {\n    render() {\n        return (\n            <Main>\n          <Navigation>\n          <ButtonGroup>\n          <Ul>\n            {/*Mapping list array to NavButton component of Routher Link */}\n            {arr.map(path => <NavButton link={path} />)}\n          </Ul>\n          </ButtonGroup> \n        </Navigation>\n\n            {/*To add lists you should add a component in Route after adding list in the array */}\n        <Switch>                    \n        <Route path=\"/login\">\n              <Login />\n          </Route>\n          <Route path=\"/dress\">\n              <Dress />\n          </Route>\n          <Route path=\"/test\">\n              <Test />\n          </Route>\n          <Route path=\"/item\">\n              <Item />\n          </Route>\n          <Route path=\"/\">\n              <Home />\n          </Route>\n        </Switch>\n        </Main>\n        );\n    }\n}\n\nexport default Nav;\n\n//constants under here are for style sheet.\nconst Navigation = styled.nav`\n  height: 3rem;\n  top: 2rem; \n  display: block;\n  z-index: 1;\n  position: fixed; \n`\nconst Ul = styled.ul`  \n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`\nconst Main = styled.div`\nmargin: 0 auto;\nwidth: 70%;\n`","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\nimport styled from 'styled-components'\nimport Nav from './components/router/Nav'\n\n\nclass App extends Component {\n  render() {        \n    return (\n      <Router>\n        <Background>\n          <Nav />\n        </Background>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\nconst Background = styled.div`\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}